library(tidyverse)
library(dplyr)
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinythemes)
runApp()
ungroup()
country_df<-reactive({
course_data %>%
filter(Year==input$year) %>%
filter(Country%in%c(input$country)) %>%
mutate(AvgTemperature={if(input$tempunit=="AvgTemperatureC"){AvgTemperatureC}
else{AvgTemperatureF}})
ungroup()
})
head(country_df())
head(country_df
head(country_df)
head(country_df)
head(country_df())
country_df()
df(country_df)
runApp()
runApp()
runApp()
runApp()
runApp()
output$countryplot<-renderPlot(
{
if(input$tempunit=="AvgTemperatureC"){
ggplot(data=country_df())+
geom_line(mapping=aes(x=Date,y=AvgTemperatureC, color=Country))
}
else{{
ggplot(data=country_df())+
geom_line(mapping=aes(x=Date,y=AvgTemperatureF, color=Country))
}
}
})
output$countryplot<-renderPlot(reactive()
{
runApp()
course_data<-readRDS("data/europe.rds")
course_data<-course_data %>%
mutate(AvgTemperatureC=(AvgTemperatureF-32)*(5/9))
runApp()
ggtitle()
?ggtitle()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?write.csv
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
